{"version":3,"sources":["hooks/usePrevious.js","components/cleanui/system/Helpdesk/Menu/style.module.scss","pages/helpdesk/list/style.module.scss","pages/helpdesk/kanban/style.module.scss","pages/helpdesk/grid/style.module.scss","components/cleanui/system/Helpdesk/Menu/index.js","pages/helpdesk/list/index.js","pages/helpdesk/kanban/index.js","pages/helpdesk/grid/index.js","pages/helpdesk/index.js"],"names":["usePrevious","value","ref","useRef","useEffect","current","module","exports","HelpdeskMenu","dispatch","useDispatch","view","URLSearchParams","useLocation","search","get","reload","a","NProgress","start","type","done","defaultValue","className","style","statusSelect","Option","to","active","size","icon","onClick","ReloadOutlined","TabPane","Tabs","badgeColors","HelpdeskList","list","useSelector","state","helpdesk","searchConfig","total","filters","dataFilters","getTitleMap","key","ticket_number","status_name","status__name","name","created_by_full_name","receive_time","response_time","resolution_time","getColumnSearchProps","dataIndex","filterDropdown","setFilters","setSelectedKeys","selectedKeys","confirm","setFilterItems","newFilters","layout","Item","label","placeholder","onChange","e","target","filterId","findIndex","filter","field","newDataFilters","currentFilter","sort","op","filterExist","splice","payload","handleSearch","color","filterIcon","filtered","CaretDownOutlined","undefined","onFilter","tableColumns","title","render","InfoCircleFilled","status","Badge","pill","toLowerCase","time","timeFormat","Date","rowSelection","selectedRowKeys","selectedRows","console","log","getCheckboxProps","record","disabled","tab","PlusOutlined","DownloadOutlined","columns","dataSource","pagination","defaultPageSize","defaultCurrent","pageSize","limit","page","Number","dropdownMenu","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","KanbanItem","item","ticketNumber","receiveTime","responseTime","lineColors","backgrounds","daysLeft","card","cardItem","content","flag","src","backgroundColor","PaperClipOutlined","HelpdeskKanban","sourceList","loading","infiniteLoader","previousList","useState","setPage","totalPage","setTotalPage","setList","filterByStatus","useCallback","statusName","filteredList","data","map","guid","backlogItems","setBacklogItems","todoItems","setTodoItems","inprogressItems","setInprogressItems","completed","setCompleted","isArrayOfObjectEqual","array1","array2","every","element","index","JSON","stringify","handleObserver","debounce","entities","isIntersecting","l","observer","IntersectionObserver","root","rootMargin","threshold","observe","round","overlay","placement","group","minHeight","animation","CardItem","cardTitle","shape","DeleteFilled","ListContainer","listWithEmpty","emptyContainer","emptyIcon","HelpdeskGrid","offeringItems","setOfferingItems","offeringApprovedItems","setOfferingApprovedItems","projectOnProgressItems","setProjectOnProgressItems","bastDoneItems","setBastDoneItems","connect"],"mappings":"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","file":"static/js/9.3c09144c.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react'\r\n\r\nexport default function usePrevious(value) {\r\n  const ref = useRef()\r\n\r\n  useEffect(() => {\r\n    ref.current = value\r\n  }, [value])\r\n\r\n  return ref.current\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn-menu\":\"style_btn-menu__25pyz\",\"active\":\"style_active__1cpu0\",\"statusSelect\":\"style_statusSelect__8v4VC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contain-tabs\":\"style_contain-tabs__SPpOk\",\"contain-views\":\"style_contain-views__C1Hf4\",\"contain-table\":\"style_contain-table__2WzLM\",\"per-page\":\"style_per-page__3ORah\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"style_card___6VUN\",\"cardItem\":\"style_cardItem__1KJDO\",\"loading\":\"style_loading__2fFfR\",\"loaderContainer\":\"style_loaderContainer__1YR8t\",\"content\":\"style_content__bjgHO\",\"flag\":\"style_flag__26K2e\",\"card-inner\":\"style_card-inner__1v4sE\",\"card-header\":\"style_card-header__98DOo\",\"card-title\":\"style_card-title__1UYFh\",\"card-menu\":\"style_card-menu__1zI0K\",\"contain-tabs\":\"style_contain-tabs__DBShK\",\"contain-views\":\"style_contain-views__3Zl7M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"style_card__1Rjiz\",\"loaderContainer\":\"style_loaderContainer__2SgFy\",\"content\":\"style_content__1WNC0\",\"cardTitle\":\"style_cardTitle__7jAOR\",\"cardItem\":\"style_cardItem__5ZxVh\",\"loading\":\"style_loading__3YsGY\",\"flag\":\"style_flag__10eWM\",\"emptyIcon\":\"style_emptyIcon__2kVOg\",\"emptyContainer\":\"style_emptyContainer__3asP5\",\"listWithEmpty\":\"style_listWithEmpty__1h7IK\",\"btn-delete\":\"style_btn-delete__1J-0q\",\"contain-tabs\":\"style_contain-tabs__1-zp5\",\"contain-views\":\"style_contain-views__1Fpys\"};","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useLocation } from 'react-router'\r\nimport { Button, Select } from 'antd'\r\nimport { useDispatch } from 'react-redux'\r\nimport NProgress from 'nprogress'\r\nimport { ReloadOutlined } from '@ant-design/icons'\r\nimport style from './style.module.scss'\r\n\r\nconst HelpdeskMenu = () => {\r\n  const dispatch = useDispatch()\r\n  const useQuery = () => {\r\n    return new URLSearchParams(useLocation().search)\r\n  }\r\n  const query = useQuery()\r\n  const view = query.get('view') || 'list'\r\n  const reload = async () => {\r\n    NProgress.start()\r\n    await dispatch({\r\n      type: 'helpdesk/LOAD_HELPDESK'\r\n    })\r\n    NProgress.done()\r\n  }\r\n  return (\r\n    <div>\r\n      {\r\n        view === 'grid'\r\n          ? (\r\n            <Select defaultValue=\"Status\" className={`${style.statusSelect} mr-2`}>\r\n              <Select.Option value=\"offering\">Offering</Select.Option>\r\n              <Select.Option value=\"offering_approved\">Approved</Select.Option>\r\n              <Select.Option value=\"project_in_progress\">In Progress</Select.Option>\r\n              <Select.Option value=\"bast_done\">Done</Select.Option>\r\n            </Select>\r\n          )\r\n          : null\r\n      }\r\n      <Link to=\"\">\r\n        <Button\r\n          className={`${style['btn-menu']} ${view === 'list' ? style.active : ''}`}\r\n          type=\"link\"\r\n          size=\"large\"\r\n          icon={<i className=\"icmn-list\" />}\r\n        />\r\n      </Link>\r\n      <Link to=\"?view=grid\">\r\n        <Button\r\n          className={`${style['btn-menu']} ${view === 'grid' ? style.active : ''}`}\r\n          type=\"link\"\r\n          size=\"large\"\r\n          icon={<i className=\"fa fa-th-large\" />}\r\n        />\r\n      </Link>\r\n      <Link to=\"?view=kanban\">\r\n        <Button\r\n          className={`${style['btn-menu']} ${view === 'kanban' ? style.active : ''}`}\r\n          type=\"link\"\r\n          size=\"large\"\r\n          icon={<i className=\"icmn-trello\" />}\r\n        />\r\n      </Link>\r\n      <Button\r\n        onClick={reload}\r\n        className=\"ml-3\"\r\n        type=\"primary\"\r\n        size=\"large\"\r\n        icon={<ReloadOutlined />}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HelpdeskMenu\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Table, Button, Input, Form, Select, Tabs } from 'antd'\r\nimport { Badge, Button as BootstrapButton } from 'reactstrap'\r\nimport { timeFormat } from 'd3-time-format'\r\nimport {\r\n  PlusOutlined,\r\n  DownloadOutlined,\r\n  InfoCircleFilled,\r\n  CaretDownOutlined\r\n} from '@ant-design/icons'\r\nimport HelpdeskMenu from 'components/cleanui/system/Helpdesk/Menu';\r\nimport style from './style.module.scss'\r\n\r\nconst { TabPane } = Tabs\r\n\r\nconst badgeColors = {\r\n  'open': 'info',\r\n  'in progress': 'warning',\r\n  'done': 'success'\r\n}\r\n\r\nconst HelpdeskList = ({ list }) => {\r\n  const dispatch = useDispatch()\r\n  const { searchConfig, total } = useSelector(state => state.helpdesk)\r\n  const { filters: dataFilters = [] } = searchConfig\r\n  const getTitleMap = key => {\r\n    const titleMap = {\r\n      ticket_number: 'Ticket Number',\r\n      status_name: 'Status',\r\n      status__name: 'Status',\r\n      name: 'Title',\r\n      created_by_full_name: 'Requestor',\r\n      receive_time: 'Receive Time',\r\n      response_time: 'Response Time',\r\n      resolution_time: 'Resolution Time',\r\n    }\r\n    return titleMap[key] || key\r\n  }\r\n  const handleSearch = (filters, dataIndex, confirm) => {\r\n    const filterId = dataFilters.findIndex(filter => filter.field === dataIndex)\r\n    const newDataFilters = [...dataFilters]\r\n    const currentFilter = {\r\n      ...filters[0],\r\n      field: dataIndex,\r\n      sort: filters[0].sort || 'none',\r\n      op: filters[0].op || 'contains'\r\n    }\r\n    const filterExist = filterId >= 0\r\n    newDataFilters.splice(\r\n      filterExist ? filterId : 0,\r\n      filterExist ? 1 : 0,\r\n      currentFilter\r\n    )\r\n    dispatch({\r\n      type: 'helpdesk/SEARCH_HELPDESK',\r\n      payload: {\r\n        filters: newDataFilters,\r\n        start: 1,\r\n      }\r\n    })\r\n    confirm()\r\n  }\r\n  const onChangePerPage = value => {\r\n    dispatch({\r\n      type: 'helpdesk/SEARCH_HELPDESK',\r\n      payload: {\r\n        limit: Number(value),\r\n        start: 1,\r\n      }\r\n    })\r\n  }\r\n  const onPaginationChange = page => {\r\n    dispatch({\r\n      type: 'helpdesk/SEARCH_HELPDESK',\r\n      payload: {\r\n        start: Number(page),\r\n      }\r\n    })\r\n  }\r\n  const getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys: setFilters, selectedKeys: filters, confirm }) => {\r\n      const setFilterItems = (key, value) => {\r\n        const newFilters = [...filters]\r\n        newFilters[0] = {\r\n          ...newFilters[0],\r\n          [key]: value\r\n        }\r\n        setFilters(newFilters)\r\n      }\r\n      return (\r\n        <Form\r\n          layout=\"vertical\"\r\n          className=\"p-4\"\r\n        >\r\n          <Form.Item\r\n            label={`Search By ${getTitleMap(dataIndex)}`}\r\n            name=\"value\"\r\n          >\r\n            <Input\r\n              placeholder=\"Type here...\"\r\n              value={(filters[0] || {}).value}\r\n              onChange={e => setFilterItems('value', e.target.value)}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Sort Order\"\r\n            name=\"sort\"\r\n          >\r\n            <Select\r\n              defaultValue=\"none\"\r\n              onChange={value => setFilterItems('sort', value)}\r\n            >\r\n              <Select.Option value=\"none\">None</Select.Option>\r\n              <Select.Option value=\"asc\">Ascending</Select.Option>\r\n              <Select.Option value=\"desc\">Descending</Select.Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Filter Column\"\r\n            name=\"op\"\r\n          >\r\n            <Select\r\n              defaultValue=\"contains\"\r\n              onChange={value => setFilterItems('op', value)}\r\n            >\r\n              <Select.Option value=\"contains\">Contains</Select.Option>\r\n              <Select.Option value=\"like\">Like</Select.Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <BootstrapButton\r\n            onClick={() => handleSearch(filters, dataIndex, confirm)}\r\n            color=\"warning\"\r\n            className=\"w-100\"\r\n          >\r\n            <i className=\"fe fe-search\" />\r\n            Search\r\n          </BootstrapButton>\r\n        </Form>\r\n      )\r\n    },\r\n    filterIcon: filtered => <CaretDownOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: () => true,\r\n  })\r\n  const tableColumns = [\r\n    {\r\n      title: '#',\r\n      dataIndex: 'info',\r\n      key: 'info',\r\n      render: () => <InfoCircleFilled className=\"text-warning\" />\r\n    },\r\n    {\r\n      title: getTitleMap('ticket_number'),\r\n      dataIndex: 'ticket_number',\r\n      key: 'ticket_number',\r\n      ...getColumnSearchProps('ticket_number')\r\n    },\r\n    {\r\n      title: getTitleMap('status_name'),\r\n      dataIndex: 'status_name',\r\n      key: 'status_name',\r\n      render: status => <Badge className=\"font-size-12\" pill color={badgeColors[(status || '').toLowerCase()]}>{ status }</Badge>,\r\n      ...getColumnSearchProps('status__name')\r\n    },\r\n    {\r\n      title: getTitleMap('name'),\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      ...getColumnSearchProps('name')\r\n    },\r\n    {\r\n      title: getTitleMap('created_by_full_name'),\r\n      dataIndex: 'created_by_full_name',\r\n      key: 'created_by_full_name',\r\n      ...getColumnSearchProps('created_by_full_name')\r\n    },\r\n    {\r\n      title: getTitleMap('receive_time'),\r\n      dataIndex: 'receive_time',\r\n      key: 'receive_time',\r\n      render: time => time && timeFormat('%Y-%m-%d %H:%M:%S')(new Date(time)),\r\n      ...getColumnSearchProps('receive_time')\r\n    },\r\n    {\r\n      title: getTitleMap('response_time'),\r\n      dataIndex: 'response_time',\r\n      key: 'response_time',\r\n      render: time => time && timeFormat('%Y-%m-%d %H:%M:%S')(new Date(time)),\r\n      ...getColumnSearchProps('response_time')\r\n    },\r\n    {\r\n      title: getTitleMap('resolution_time'),\r\n      dataIndex: 'resolution_time',\r\n      key: 'resolution_time',\r\n      render: time => time && timeFormat('%Y-%m-%d %H:%M:%S')(new Date(time)),\r\n      ...getColumnSearchProps('resolution_time')\r\n    }\r\n  ]\r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows)\r\n    },\r\n    getCheckboxProps: record => ({\r\n      disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n      name: record.name,\r\n    }),\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-between mb-4\">\r\n        <Tabs className={style['contain-tabs']}>\r\n          <TabPane key=\"1\" tab={<Button type=\"primary\" size=\"large\" icon={<PlusOutlined />}>Create New</Button>} />\r\n          <TabPane key=\"2\" tab={<Button size=\"large\" icon={<DownloadOutlined />} className=\"ml-3\">Download</Button>} />\r\n          <TabPane key=\"3\" tab={<Button size=\"large\" icon={<DownloadOutlined />} className=\"ml-3\">Download</Button>} />\r\n          <TabPane key=\"4\" tab={<Button size=\"large\" icon={<DownloadOutlined />} className=\"ml-3\">Download</Button>} />\r\n          <TabPane key=\"5\" tab={<Button size=\"large\" icon={<DownloadOutlined />} className=\"ml-3\">Download</Button>} />\r\n          <TabPane key=\"6\" tab={<Button size=\"large\" icon={<DownloadOutlined />} className=\"ml-3\">Download</Button>} />\r\n          <TabPane key=\"7\" tab={<Button size=\"large\" icon={<DownloadOutlined />} className=\"ml-3\">Download</Button>} />\r\n        </Tabs>\r\n        <div className={style['contain-views']}>\r\n          <HelpdeskMenu />\r\n        </div>\r\n      </div>\r\n      <div className=\"kit__utils__table\">\r\n        <div className={`card ${style['contain-table']}`}>\r\n          <Table\r\n            rowSelection={rowSelection}\r\n            columns={tableColumns}\r\n            dataSource={list}\r\n            pagination={{\r\n              defaultPageSize: 10,\r\n              defaultCurrent: 1,\r\n              pageSize: searchConfig.limit,\r\n              current: searchConfig.start,\r\n              total,\r\n              onChange: onPaginationChange\r\n            }}\r\n          />\r\n          {\r\n            total > 0\r\n              ? (\r\n                <div className={style['per-page']}>\r\n                  <span>Display </span>\r\n                  <Select defaultValue={searchConfig.limit || 10} onChange={onChangePerPage}>\r\n                    <Select.Option value=\"5\">5</Select.Option>\r\n                    <Select.Option value=\"10\">10</Select.Option>\r\n                    <Select.Option value=\"20\">20</Select.Option>\r\n                    <Select.Option value=\"30\">30</Select.Option>\r\n                  </Select>\r\n                  <span>of { total } rows</span>\r\n                </div>\r\n              ) : null\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HelpdeskList\r\n","import React, {useState, useEffect, useCallback, useRef} from 'react'\r\nimport { ReactSortable } from 'react-sortablejs'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Button, Avatar, Dropdown, Menu, Tabs } from 'antd'\r\nimport debounce from 'lodash.debounce'\r\nimport { timeFormat } from 'd3-time-format'\r\nimport {\r\n  PlusOutlined,\r\n  PaperClipOutlined,\r\n} from '@ant-design/icons'\r\nimport HelpdeskMenu from 'components/cleanui/system/Helpdesk/Menu'\r\nimport usePrevious from 'hooks/usePrevious'\r\nimport style from './style.module.scss'\r\n\r\nconst { TabPane } = Tabs\r\n\r\nconst dropdownMenu = (\r\n  <Menu>\r\n    <Menu.Item>\r\n      <a>Action</a>\r\n    </Menu.Item>\r\n    <Menu.Item>\r\n      <a>Another action</a>\r\n    </Menu.Item>\r\n    <Menu.Item>\r\n      <a>Something else here</a>\r\n    </Menu.Item>\r\n    <div className=\"dropdown-divider\" />\r\n    <Menu.Item>\r\n      <a>Separated link</a>\r\n    </Menu.Item>\r\n  </Menu>\r\n)\r\n\r\nfunction shuffle(array) {\r\n  let currentIndex = array.length;\r\n  let temporaryValue;\r\n  let randomIndex;\r\n\r\n  while (currentIndex !== 0) {\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex -= 1;\r\n\r\n    temporaryValue = array[currentIndex];\r\n    array[currentIndex] = array[randomIndex];\r\n    array[randomIndex] = temporaryValue;\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nconst KanbanItem = ({ item }) => {\r\n  const { key, name, ticket_number: ticketNumber, receive_time: receiveTime, response_time: responseTime } = item\r\n  const lineColors = shuffle(['bg-danger', 'bg-primary', 'bg-warning', 'bg-success'])\r\n  const backgrounds = shuffle(['#9B51E0', '#F1C40F', '#219653'])\r\n  const daysLeft = shuffle([true, false])\r\n  return (\r\n    <div className={`${style.card} ${style.cardItem}`} key={key}>\r\n      <div className={style.content}>\r\n        <div className=\"d-flex flex-wrap-reverse align-items-center justify-content-between\">\r\n          <div>\r\n            <span className={`${style.flag} d-inline-block ${lineColors[0]}`}>&nbsp;</span>\r\n            <span className={`${style.flag} d-inline-block ${lineColors[1]}`}>&nbsp;</span>\r\n          </div>\r\n          { daysLeft[0] ? <span className=\"text-danger\">2 days left</span> : null }\r\n        </div>\r\n        <div className=\"d-flex flex-wrap-reverse align-items-center\">\r\n          <h5 className=\"text-dark font-size-18 mt-2 mr-auto\">{name}/{ticketNumber}</h5>\r\n        </div>\r\n        <div className=\"text-gray-5 mb-2\">Deadline: {receiveTime && timeFormat('%Y-%m-%d %H:%M:%S')(new Date(receiveTime))}/{responseTime && timeFormat('%Y-%m-%d %H:%M:%S')(new Date(responseTime))}</div>\r\n        <div className=\"d-flex align-items-center flex-wrap pb-2 justify-content-between\">\r\n          <div className=\"d-flex\">\r\n            <div className=\"kit__utils__avatar kit__utils__avatar--rounded kit__utils__avatar--size27 flex-shrink-0 mr-2\">\r\n              <Avatar size={28} src=\"resources/images/avatars/1.jpg\" />\r\n            </div>\r\n            <div className=\"kit__utils__avatar kit__utils__avatar--rounded kit__utils__avatar--size27 flex-shrink-0 mr-2\">\r\n              <Avatar size={28} src=\"resources/images/avatars/2.jpg\" />\r\n            </div>\r\n            <div className=\"kit__utils__avatar kit__utils__avatar--rounded kit__utils__avatar--size27 flex-shrink-0 mr-2\">\r\n              <Avatar size={28} src=\"resources/images/avatars/3.jpg\" />\r\n            </div>\r\n            <div className=\"kit__utils__avatar kit__utils__avatar--rounded kit__utils__avatar--size27 flex-shrink-0 mr-2\">\r\n              <Avatar size={28} style={{color: '#ffffff', backgroundColor: backgrounds[0]}}>SR</Avatar>\r\n            </div>\r\n          </div>\r\n          { daysLeft[0] ? <Button type=\"link\" icon={<PaperClipOutlined />} /> : null }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst HelpdeskKanban = () => {\r\n  const { list: sourceList, total, loading, limit } = useSelector(state => state.helpdesk)\r\n  const infiniteLoader = useRef(null)\r\n  const dispatch = useDispatch()\r\n  const previousList = usePrevious(sourceList) || []\r\n  const [page, setPage] = useState(1)\r\n  const [totalPage, setTotalPage] = useState(1)\r\n  const [list, setList] = useState([])\r\n  const filterByStatus = useCallback(statusName => {\r\n    const filteredList = [...list].filter(data => data.status_name === statusName)\r\n    return filteredList.length > 0\r\n      ? filteredList.map(data => (\r\n        <KanbanItem item={data} key={data.guid} />\r\n      )) : []\r\n  }, [list])\r\n  const [backlogItems, setBacklogItems] = useState([])\r\n  const [todoItems, setTodoItems] = useState([])\r\n  const [inprogressItems, setInprogressItems] = useState([])\r\n  const [completed, setCompleted] = useState([])\r\n  const isArrayOfObjectEqual = useCallback(\r\n    (array1, array2) => (array1.length === array2.length) &&\r\n      array1.every((element, index) => {\r\n        return JSON.stringify(element) === JSON.stringify(array2[index]);\r\n      }), []\r\n  )\r\n\r\n  const handleObserver = useCallback(debounce((entities) => {\r\n    const target = entities[0];\r\n    if (target.isIntersecting && page < totalPage && !loading) {\r\n      setPage(page + 1)\r\n    }\r\n  }, 600), [page, totalPage, loading])\r\n\r\n  useEffect(() => {\r\n    setBacklogItems(filterByStatus('Backlog'))\r\n    setTodoItems(filterByStatus('Open'))\r\n    setInprogressItems(filterByStatus('In Progress'))\r\n    setCompleted(filterByStatus('Done'))\r\n  }, [list, filterByStatus])\r\n\r\n  useEffect(() => {\r\n    if (!isArrayOfObjectEqual(sourceList, previousList)) {\r\n      setList(l =>[\r\n        ...l,\r\n        ...sourceList,\r\n      ])\r\n    }\r\n  }, [sourceList, previousList, isArrayOfObjectEqual])\r\n\r\n  useEffect(() => {\r\n    if (page > 1) {\r\n      dispatch({\r\n        type: 'helpdesk/SEARCH_HELPDESK',\r\n        payload: {\r\n          start: Number(page),\r\n        }\r\n      })\r\n    }\r\n  }, [page, dispatch])\r\n\r\n  useEffect(() => {\r\n    const options = {\r\n      root: null,\r\n      rootMargin: '20px',\r\n      threshold: 1.0\r\n    };\r\n\r\n    const observer = new IntersectionObserver(handleObserver, options);\r\n    if (infiniteLoader.current) {\r\n      observer.observe(infiniteLoader.current)\r\n    }\r\n  }, [handleObserver])\r\n\r\n  useEffect(() => {\r\n    setTotalPage(Math.round(total / limit))\r\n  }, [total, limit])\r\n\r\n  return (\r\n    <div className={loading ? style.loading : ''}>\r\n      <div className=\"d-flex justify-content-between mb-4\">\r\n        <Tabs className={style['contain-tabs']}>\r\n          <TabPane key=\"1\" tab={<Button type=\"primary\" size=\"large\" icon={<PlusOutlined />}>Create New</Button>} />\r\n        </Tabs>\r\n        <div className={style['contain-views']}>\r\n          <HelpdeskMenu />\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-3 col-md-6 d-flex\">\r\n          <div className=\"card bg-light py-3 px-3 w-100\">\r\n            <div className={`card-header card-header-flex border-bottom-0 p-0 align-items-start ${style['card-header']}`}>\r\n              <div className={`d-flex flex-column justify-content-center align-items-start ${style['card-title']}`}>\r\n                <h3 className=\"font-weight-bold text-dark font-size-18 mb-0\">Backlog ({backlogItems.length})</h3>\r\n              </div>\r\n              <div className={`ml-auto d-flex flex-column justify-content-center ${style['card-menu']}`}>\r\n                <div className=\"dropdown d-inline-block\">\r\n                  <Dropdown overlay={dropdownMenu} placement=\"bottomRight\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-light dropdown-toggle dropdown-toggle-noarrow\"\r\n                    >\r\n                      <i className=\"fe fe-more-horizontal\" />\r\n                    </button>\r\n                  </Dropdown>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={`d-flex flex-column justify-content-between ${style['card-inner']}`}>\r\n              <div>\r\n                <ReactSortable\r\n                  group=\"issues\"\r\n                  style={{minHeight: 500}}\r\n                  list={backlogItems}\r\n                  setList={setBacklogItems}\r\n                  animation={300}\r\n                >\r\n                  {backlogItems.map(item => item)}\r\n                </ReactSortable>\r\n              </div>\r\n              <Button size=\"large\" type=\"primary\">\r\n                <i className=\"fe fe-plus d-inline-block mr-2\" />\r\n                Add new card\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-3 col-md-6 d-flex\">\r\n          <div className=\"card bg-light py-3 px-3 w-100\">\r\n            <div className={`card-header card-header-flex border-bottom-0 p-0 align-items-start ${style['card-header']}`}>\r\n              <div className={`d-flex flex-column justify-content-center align-items-start ${style['card-title']}`}>\r\n                <h3 className=\"font-weight-bold text-dark font-size-18 mb-0\">To Do ({todoItems.length})</h3>\r\n              </div>\r\n              <div className={`ml-auto d-flex flex-column justify-content-center ${style['card-menu']}`}>\r\n                <div className=\"dropdown d-inline-block\">\r\n                  <Dropdown overlay={dropdownMenu} placement=\"bottomRight\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-light dropdown-toggle dropdown-toggle-noarrow\"\r\n                    >\r\n                      <i className=\"fe fe-more-horizontal\" />\r\n                    </button>\r\n                  </Dropdown>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={`d-flex flex-column justify-content-between ${style['card-inner']}`}>\r\n              <div>\r\n                <ReactSortable\r\n                  group=\"issues\"\r\n                  style={{minHeight: 500}}\r\n                  list={todoItems}\r\n                  setList={setTodoItems}\r\n                  animation={300}\r\n                >\r\n                  {todoItems.map(item => item)}\r\n                </ReactSortable>\r\n              </div>\r\n              <Button size=\"large\" type=\"primary\">\r\n                <i className=\"fe fe-plus d-inline-block mr-2\" />\r\n                Add new card\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-3 col-md-6 d-flex\">\r\n          <div className=\"card bg-light py-3 px-3 w-100\">\r\n            <div className={`card-header card-header-flex border-bottom-0 p-0 align-items-start ${style['card-header']}`}>\r\n              <div className={`d-flex flex-column justify-content-center align-items-start ${style['card-title']}`}>\r\n                <h3 className=\"font-weight-bold text-dark font-size-18 mb-0\">In Progress ({inprogressItems.length})</h3>\r\n              </div>\r\n              <div className={`ml-auto d-flex flex-column justify-content-center ${style['card-menu']}`}>\r\n                <div className=\"dropdown d-inline-block\">\r\n                  <Dropdown overlay={dropdownMenu} placement=\"bottomRight\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-light dropdown-toggle dropdown-toggle-noarrow\"\r\n                    >\r\n                      <i className=\"fe fe-more-horizontal\" />\r\n                    </button>\r\n                  </Dropdown>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={`d-flex flex-column justify-content-between ${style['card-inner']}`}>\r\n              <div>\r\n                <ReactSortable\r\n                  group=\"issues\"\r\n                  style={{minHeight: 500}}\r\n                  list={inprogressItems}\r\n                  setList={setInprogressItems}\r\n                  animation={300}\r\n                >\r\n                  {inprogressItems.map(item => item)}\r\n                </ReactSortable>\r\n              </div>\r\n              <Button size=\"large\" type=\"primary\">\r\n                <i className=\"fe fe-plus d-inline-block mr-2\" />\r\n                Add new card\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-3 col-md-6 d-flex\">\r\n          <div className=\"card bg-light py-3 px-3 w-100\">\r\n            <div className={`card-header card-header-flex border-bottom-0 p-0 align-items-start ${style['card-header']}`}>\r\n              <div className={`d-flex flex-column justify-content-center align-items-start ${style['card-title']}`}>\r\n                <h3 className=\"font-weight-bold text-dark font-size-18 mb-0\">Completed ({completed.length})</h3>\r\n              </div>\r\n              <div className={`ml-auto d-flex flex-column justify-content-center ${style['card-menu']}`}>\r\n                <div className=\"dropdown d-inline-block\">\r\n                  <Dropdown overlay={dropdownMenu} placement=\"bottomRight\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-light dropdown-toggle dropdown-toggle-noarrow\"\r\n                    >\r\n                      <i className=\"fe fe-more-horizontal\" />\r\n                    </button>\r\n                  </Dropdown>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={`d-flex flex-column justify-content-between ${style['card-inner']}`}>\r\n              <div>\r\n                <ReactSortable\r\n                  group=\"issues\"\r\n                  style={{minHeight: 500}}\r\n                  list={completed}\r\n                  setList={setCompleted}\r\n                  animation={300}\r\n                >\r\n                  {completed.map(item => item)}\r\n                </ReactSortable>\r\n              </div>\r\n              <Button size=\"large\" type=\"primary\">\r\n                <i className=\"fe fe-plus d-inline-block mr-2\" />\r\n                Add new card\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {\r\n        page < totalPage\r\n          ? (\r\n            <div className=\"w-100 d-flex justify-content-center py-3\">\r\n              <Button type=\"primary\" className=\"width-200\" loading>\r\n                <span ref={infiniteLoader}>Loading more...</span>\r\n              </Button>\r\n            </div>\r\n          ) : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HelpdeskKanban\r\n","import React, { useState, useEffect, useCallback, useRef } from 'react'\r\nimport { ReactSortable } from 'react-sortablejs'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Button, Tabs } from 'antd'\r\nimport debounce from 'lodash.debounce'\r\nimport {\r\n  DownloadOutlined,\r\n  PlusOutlined,\r\n  DeleteFilled,\r\n} from '@ant-design/icons'\r\nimport HelpdeskMenu from 'components/cleanui/system/Helpdesk/Menu'\r\nimport usePrevious from 'hooks/usePrevious'\r\nimport style from './style.module.scss'\r\n\r\nconst { TabPane } = Tabs\r\nconst badgeColors = {\r\n  'Open': 'bg-primary',\r\n  'In Progress': 'bg-warning',\r\n  'Done': 'bg-success',\r\n  'Backlog': 'bg-danger'\r\n}\r\nconst CardItem = ({ item }) => {\r\n  const { key, name, ticket_number: ticketNumber, status_name: statusName } = item\r\n  return (\r\n    <div className={`card ${style.cardItem}`} key={key}>\r\n      <div className={style.content}>\r\n        <div className={`${style.flag} ${badgeColors[statusName]}`} />\r\n        <div className=\"d-flex flex-wrap-reverse align-items-end justify-content-between\">\r\n          <div className={style.cardTitle}>\r\n            <h5 className=\"text-dark font-size-18 mt-2 mr-auto\">{name}/{ticketNumber}</h5>\r\n            <div className=\"text-gray-5 mb-2\">0 of 0 items</div>\r\n          </div>\r\n          <div className=\"mt-2\">\r\n            <Button\r\n              shape=\"circle\"\r\n              icon={<DeleteFilled />}\r\n              size=\"large\"\r\n              className={style['btn-delete']}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex align-items-center flex-wrap pb-2\">\r\n          <div className=\"text-gray-5 text-center w-100 py-2 mt-4\">\r\n            <span>Data not found</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ListContainer = ({ list, setList }) => {\r\n  return (\r\n    <div className={style.listWithEmpty}>\r\n      {\r\n        list.length < 1\r\n          ? (\r\n            <div className={`w-100 align-items-center d-flex flex-column card p-4 ${style.emptyContainer}`}>\r\n              <i className={`${style.emptyIcon} fe fe-inbox`} />\r\n              <p className=\"mt-2\">This is currently empty</p>\r\n            </div>\r\n          ) : null\r\n      }\r\n      <ReactSortable\r\n        group=\"issues\"\r\n        style={{ minHeight: 500 }}\r\n        list={list}\r\n        setList={setList}\r\n        animation={300}\r\n      >\r\n        {list.map(item => item)}\r\n      </ReactSortable>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst HelpdeskGrid = () => {\r\n  const { list: sourceList, total, loading, limit } = useSelector(state => state.helpdesk)\r\n  const infiniteLoader = useRef(null)\r\n  const dispatch = useDispatch()\r\n  const previousList = usePrevious(sourceList) || []\r\n  const [page, setPage] = useState(1)\r\n  const [totalPage, setTotalPage] = useState(1)\r\n  const [list, setList] = useState([])\r\n  const [offeringItems, setOfferingItems] = useState([])\r\n  const [offeringApprovedItems, setOfferingApprovedItems] = useState([])\r\n  const [projectOnProgressItems, setProjectOnProgressItems] = useState([])\r\n  const [bastDoneItems, setBastDoneItems] = useState([])\r\n\r\n  const filterByStatus = useCallback(statusName => {\r\n    const filteredList = [...list].filter(data => data.status_name === statusName)\r\n    return filteredList.length > 0\r\n      ? filteredList.map(data => (\r\n        <CardItem item={data} key={data.guid} />\r\n      )) : []\r\n  }, [list])\r\n\r\n  const isArrayOfObjectEqual = useCallback(\r\n    (array1, array2) => (array1.length === array2.length) &&\r\n      array1.every((element, index) => {\r\n        return JSON.stringify(element) === JSON.stringify(array2[index]);\r\n      }), []\r\n  )\r\n\r\n  const handleObserver = useCallback(debounce((entities) => {\r\n    const target = entities[0];\r\n    if (target.isIntersecting && page < totalPage && !loading) {\r\n      setPage(page + 1)\r\n    }\r\n  }, 600), [page, totalPage, loading])\r\n\r\n  useEffect(() => {\r\n    setOfferingItems(filterByStatus('Backlog'))\r\n    setOfferingApprovedItems(filterByStatus('Open'))\r\n    setProjectOnProgressItems(filterByStatus('In Progress'))\r\n    setBastDoneItems(filterByStatus('Done'))\r\n  }, [list, filterByStatus])\r\n\r\n  useEffect(() => {\r\n    if (!isArrayOfObjectEqual(sourceList, previousList)) {\r\n      setList(l =>[\r\n        ...l,\r\n        ...sourceList,\r\n      ])\r\n    }\r\n  }, [sourceList, previousList, isArrayOfObjectEqual])\r\n\r\n  useEffect(() => {\r\n    if (page > 1) {\r\n      dispatch({\r\n        type: 'helpdesk/SEARCH_HELPDESK',\r\n        payload: {\r\n          start: Number(page),\r\n        }\r\n      })\r\n    }\r\n  }, [page, dispatch])\r\n\r\n  useEffect(() => {\r\n    const options = {\r\n      root: null,\r\n      rootMargin: '20px',\r\n      threshold: 1.0\r\n    };\r\n\r\n    const observer = new IntersectionObserver(handleObserver, options);\r\n    if (infiniteLoader.current) {\r\n      observer.observe(infiniteLoader.current)\r\n    }\r\n  }, [handleObserver])\r\n\r\n  useEffect(() => {\r\n    setTotalPage(Math.round(total / limit))\r\n  }, [total, limit])\r\n\r\n  return (\r\n    <div className={loading ? style.loading : ''}>\r\n      <div className=\"d-flex justify-content-between mb-4\">\r\n        <Tabs className={style['contain-tabs']}>\r\n          <TabPane key=\"1\" tab={<Button type=\"primary\" size=\"large\" icon={<PlusOutlined />}>Create New</Button>} />\r\n          <TabPane key=\"2\" tab={<Button size=\"large\" icon={<DownloadOutlined />} className=\"ml-3\">Download</Button>} />\r\n        </Tabs>\r\n        <div className={style['contain-views']}>\r\n          <HelpdeskMenu />\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-3 col-md-6\">\r\n          <ListContainer list={offeringItems} setList={setOfferingItems} />\r\n        </div>\r\n        <div className=\"col-lg-3 col-md-6\">\r\n          <ListContainer list={offeringApprovedItems} setList={setOfferingApprovedItems} />\r\n        </div>\r\n        <div className=\"col-lg-3 col-md-6\">\r\n          <ListContainer list={projectOnProgressItems} setList={setProjectOnProgressItems} />\r\n        </div>\r\n        <div className=\"col-lg-3 col-md-6\">\r\n          <ListContainer list={bastDoneItems} setList={setBastDoneItems} />\r\n        </div>\r\n      </div>\r\n      {\r\n        page < totalPage\r\n          ? (\r\n            <div className=\"w-100 d-flex justify-content-center py-3\">\r\n              <Button type=\"primary\" className=\"width-200\" loading>\r\n                <span ref={infiniteLoader}>Loading more...</span>\r\n              </Button>\r\n            </div>\r\n          ) : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HelpdeskGrid\r\n","import React from 'react'\r\nimport { useLocation } from 'react-router'\r\nimport { connect } from 'react-redux'\r\nimport HelpdeskList from './list'\r\nimport HelpdeskKanban from './kanban'\r\nimport HelpdeskGrid from './grid'\r\n\r\nconst mapStateToProps = ({ helpdesk, dispatch }) => ({\r\n  dispatch,\r\n  list: helpdesk.list,\r\n  loading: helpdesk.loading\r\n})\r\n\r\nconst useQuery = () => {\r\n  return new URLSearchParams(useLocation().search)\r\n}\r\n\r\nconst Helpdesk = ({ list }) => {\r\n  const query = useQuery()\r\n  const view = query.get('view') || 'list'\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-12\">\r\n          {\r\n            view === 'list' && (\r\n              <HelpdeskList list={list} />\r\n            )\r\n          }\r\n          {\r\n            view === 'grid' && (\r\n              <HelpdeskGrid />\r\n            )\r\n          }\r\n          {\r\n            view === 'kanban' && (\r\n              <HelpdeskKanban />\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(Helpdesk)\r\n"],"sourceRoot":""}